@model eCommerceProject.Models.Contact

@{
	ViewBag.Title = "Supported";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<div class="container">
	<div class="col-sm-12 text-center justify-content-between">
		<h2>SUPPORTED</h2>
		<h6>Thank you for your interest in our services. Please leave your information, we will contact you as soon as possible.</h6>
	</div>
	@using (Html.BeginForm("Create", "Contacts", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">

			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-12">
					@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
				</div>
			</div>
			@Html.HiddenFor(model => model.ArticleDate)
			<div class="form-group">
				<div class="row">
					<div class="col-sm-6">
						@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-12">
							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="col-sm-6">
						@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
						<div class="col-md-12">
							@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
			</div>




			<div class="form-group">
				@Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-12" >
					@Html.TextAreaFor(model => model.Content, new { @class = "form-control col-md-12 editor", @style = "height: 200px" } )
					@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
				</div>
			</div>



			<div class="col">
				<div class="btn btn-primary">
					@Html.LabelFor(m => m.ImagePath, new { @class = "control-label col-md" })
					@Html.TextBoxFor(m => m.ImageFile, new { type = "file", id = "imageBrowes" })
					@Html.ValidationMessageFor(model => model.ImagePath, "*required", new { @class = "text-danger" })

				</div>
				<hr />


				<div id="imgPreview" class="col-md-6" style="display:none">
					<img class="img-responsive col-md-12" id="targetImg" />
					<div class="caption">
						<a href="#" onclick="ClearPreview()"><i class="fas fa-trash"></i></a>
						<span id="description"></span>
					</div>
				</div>

			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-success" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>
</div>
<script src="~/Scripts/jquery-3.2.1.min.js"></script>
<script src="~/Scripts/quill.min.js"></script>

<script>

	$(document).ready(function () {

		$("#imageBrowes").change(function () {

			var File = this.files;

			if (File && File[0]) {
				ReadImage(File[0]);
			}

		})


	})
	var toolbarOptions = [
		[{ 'header': [1, 2, 3, false] }],
		[{ 'color': [] }, { 'background': [] }],
		['bold', 'italic', 'underline', 'strike'],
		['blockquote', 'code-block'],
		[{ 'list': 'ordered' }, { 'list': 'bullet' }],
		[{ 'indent': '-1' }, { 'indent': '+1' }],
		['clean']
	]
	var quill = new Quill('.editor', {
		modules: {
			toolbar: toolbarOptions
		},
		theme: 'snow'
	});

	

	var ReadImage = function (file) {

		var reader = new FileReader;
		var image = new Image;

		reader.readAsDataURL(file);
		reader.onload = function (_file) {

			image.src = _file.target.result;
			image.onload = function () {

				var height = this.height;
				var width = this.width;
				var type = file.type;
				var size = ~~(file.size / 1024) + "KB";

				$("#targetImg").attr('src', _file.target.result);
				$("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
				$("#imgPreview").show();

			}

		}

	}

	var ClearPreview = function () {
		$("#imageBrowes").val('');
		$("#description").text('');
		$("#imgPreview").hide();

	}


</script>