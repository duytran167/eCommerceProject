@model eCommerceProject.Models.ApplicationUser

@{
	ViewBag.Title = "Edit Profile";
	if (User.IsInRole("Admin"))
	{
		Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
	}
	if (User.IsInRole("Seller"))
	{
		Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
	}
	if (User.IsInRole("Customer"))
	{
		Layout = "~/Views/Shared/_Layout.cshtml";
	}

}


<style>
	.box-container {
		max-width: 960px;
		margin: 30px auto;
		padding: 20px;
	}

	.avatar-upload {
		position: relative;
		max-width: 205px;
		margin: 50px auto;
	}

		.avatar-upload .avatar-edit {
			position: absolute;
			right: 5px;
			z-index: 1;
			top: 10px;
		}

			.avatar-upload .avatar-edit input {
				display: none;
			}

				.avatar-upload .avatar-edit input + label {
					display: inline-block;
					width: 34px;
					height: 34px;
					margin-bottom: 0;
					border-radius: 100%;
					background: #FFFFFF;
					border: 1px solid transparent;
					box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.12);
					cursor: pointer;
					font-weight: normal;
					transition: all .2s ease-in-out;
				}

					.avatar-upload .avatar-edit input + label:hover {
						background: #f1f1f1;
						border-color: #d6d6d6;
					}

					.avatar-upload .avatar-edit input + label:after {
						content: "\f040";
						font-family: 'FontAwesome';
						color: #757575;
						position: absolute;
						top: 10px;
						left: 0;
						right: 0;
						text-align: center;
						margin: auto;
					}

		.avatar-upload .avatar-preview {
			width: 192px;
			height: 192px;
			position: relative;
			border-radius: 100%;
			border: 6px solid #F8F8F8;
			box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.1);
		}

			.avatar-upload .avatar-preview > div {
				width: 100%;
				height: 100%;
				border-radius: 100%;
				background-size: cover;
				background-repeat: no-repeat;
				background-position: center;
			}
</style>

<div class="container">



	@using (Html.BeginForm("EditProfile", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()

	<div class="form-horizontal row">
		<h4>Update User</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)
		<div class="col-md-4">
			<div class="box-container">
				<div class="form-horizontal col-md-4">
					<div class="avatar-upload">
						<div class="avatar-edit">
							<input type='file' name="file" id="imageUpload" accept=".png, .jpg, .jpeg" />
							<label for="imageUpload"></label>
						</div>
						<div class="avatar-preview">
							<div id="imagePreview" style="background-image: url(@Url.Content(Model.ImagePath));">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-8">
			<div class="form-group">
				@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
				</div>
			</div>
			@*<div class="col">
				<div class="btn btn-primary">
					@Html.LabelFor(m => m.ImagePath, new { @class = "control-label col-md" })
					@Html.TextBoxFor(m => m.ImageFile, new { type = "file", id = "imageBrowes" })
					@Html.ValidationMessageFor(model => model.ImagePath, "*required", new { @class = "text-danger" })

				</div>
				<hr />


				<div id="imgPreview" class="col-md-12" style="display:none">
					<img class="img-responsive col-md-12" id="targetImg" />
					<div class="caption">
						<a href="#" onclick="ClearPreview()"><i class="fas fa-trash"></i></a>
						<span id="description"></span>
					</div>
				</div>

			</div>*@



			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-success btn-tone" />
				</div>
			</div>
		</div>
	</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/jquery-3.2.1.min.js"></script>
	<script>

		$(document).ready(function () {

			$("#imageBrowes").change(function () {

				var File = this.files;

				if (File && File[0]) {
					ReadImage(File[0]);
				}

			})


		})


		var ReadImage = function (file) {

			var reader = new FileReader;
			var image = new Image;

			reader.readAsDataURL(file);
			reader.onload = function (_file) {

				image.src = _file.target.result;
				image.onload = function () {

					var height = this.height;
					var width = this.width;
					var type = file.type;
					var size = ~~(file.size / 1024) + "KB";

					$("#targetImg").attr('src', _file.target.result);
					$("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
					$("#imgPreview").show();

				}

			}

		}

		var ClearPreview = function () {
			$("#imageBrowes").val('');
			$("#description").text('');
			$("#imgPreview").hide();

		}


	</script>
	<script src="~/Scripts/jquery-3.2.1.min.js"></script>
	<script>

		function readURL(input) {
			if (input.files && input.files[0]) {
				var reader = new FileReader();
				reader.onload = function (e) {
					$('#imagePreview').css('background-image', 'url(' + e.target.result + ')');
					$('#imagePreview').hide();
					$('#imagePreview').fadeIn(650);
				}
				reader.readAsDataURL(input.files[0]);
			}
		}
		$("#imageUpload").change(function () {
			readURL(this);
		});

	</script>
}
