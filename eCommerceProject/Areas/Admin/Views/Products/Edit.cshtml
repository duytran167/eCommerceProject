@model eCommerceProject.ViewModel.ProductVM

@{
	ViewBag.Title = "Edit " + Model.Product.ProductName;
	Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
	var result = Model.Product.ImageProducts.GroupBy(x => x.FileName);
}
<style>
	.imagePreview {
		width: 100%;
		height: 180px;
		background-position: center center;
		background: url(http://cliquecities.com/assets/no-image-e3699ae23f866f6cbdf8ba2443ee5c4e.jpg);
		background-color: #fff;
		background-size: cover;
		background-repeat: no-repeat;
		display: inline-block;
		box-shadow: 0px -3px 6px 2px rgba(0,0,0,0.2);
	}

	.btn-primary {
		display: block;
		border-radius: 0px;
		box-shadow: 0px 4px 6px 2px rgba(0,0,0,0.2);
		margin-top: -5px;
	}

	.imgUp {
		margin-bottom: 15px;
		padding-left: 30px;
	}

	.del {
		position: absolute;
		top: 0px;
		right: 15px;
		width: 30px;
		height: 30px;
		text-align: center;
		line-height: 30px;
		background-color: rgba(255,255,255,0.6);
		cursor: pointer;
	}

	.imgAdd {
		width: 30px;
		height: 30px;
		border-radius: 50%;
		background-color: #4bd7ef;
		color: #fff;
		box-shadow: 0px 0px 2px 1px rgba(0,0,0,0.2);
		text-align: center;
		line-height: 30px;
		margin-top: 0px;
		cursor: pointer;
		font-size: 15px;
	}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/Content/fonts/iconic/css/material-design-iconic-font.min.css" rel="stylesheet" />
<div class="page-header">
	<h2 class="header-title">Product</h2>
	<div class="header-sub-title">
		<nav class="breadcrumb breadcrumb-dash">
			<a href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Product</a>
			<a class="breadcrumb-item" href="#">Edit</a>
			<span class="breadcrumb-item active">@Model.Product.ProductName</span>
		</nav>
	</div>
</div>

<div class="page-header no-gutters has-tab">
	<div class="d-md-flex m-b-15 align-items-center justify-content-between">
		<div class="media align-items-center m-b-15">
			<div class="avatar avatar-image rounded" style="height: 70px; width: 70px">
				@foreach (var item in result)
				{
					<img src="@Url.Content(item.Key)" alt="">
				}

			</div>
			<div class="m-l-15">
				<h4 class="m-b-0">
					@Model.Product.ProductName

				</h4>

				<p class="text-muted m-b-0">Code: #@Model.Product.ProductCode</p>
			</div>
		</div>

	</div>
	<ul class="nav nav-tabs">
		<li class="nav-item">
			<a class="nav-link active" data-toggle="tab" href="#product-edit-basic">Basic Info</a>
		</li>
		<li class="nav-item">
			<a class="nav-link" data-toggle="tab" href="#product-edit-description">Description</a>
		</li>
		<li class="nav-item">
			<a class="nav-link" data-toggle="tab" href="#product-edit-option">Option Info</a>
		</li>

		<li class="nav-item">
			<a class="nav-link" data-toggle="tab" href="#product-image-basic">Image Info</a>
		</li>


	</ul>
</div>
@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="tab-content m-t-15">

		<div class="tab-pane fade show active" id="product-edit-basic">
			<div class="card">
				<div class="card-body">
					<div class="form-group">
						<label class="font-weight-semibold" for="productName">Product Name: </label>
						@Html.EditorFor(model => model.Product.ProductName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Product.ProductName, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label class="font-weight-semibold" for="productName">Product Code: </label>
						@Html.EditorFor(model => model.Product.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Product.ProductCode, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label class="font-weight-semibold" for="productPrice">Price: </label>

						@Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label class="font-weight-semibold" for="productPrice">Discount: </label>
						@Html.EditorFor(model => model.Product.Discount, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Product.Discount, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						<label class="font-weight-semibold" for="productPrice">Price Sale: </label>

						@Html.EditorFor(model => model.Product.PriceSale, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Product.PriceSale, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label class="font-weight-semibold" for="productName">Short Description: </label>
						@Html.EditorFor(model => model.Product.ShortDesc, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Product.ShortDesc, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						<label class="font-weight-semibold" for="productCategory">Category: </label>
						@Html.DropDownListFor(m => m.Product.CategoriesID, new SelectList(Model.Categories, "Id", "CategoryName"), "Select Category", new { @class = "dropdown form-control col-md-12" })
					</div>



					<div class="form-group">
						@Html.Label("Public", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.CheckBoxFor(model => model.Product.Active, new { data_toggle = "toggle", data_onstyle = "success" })

							@Html.ValidationMessageFor(m => m.Product.Active, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.Label("Best Seller", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.CheckBoxFor(model => model.Product.BestSellers, new { data_toggle = "toggle", data_onstyle = "success" })

							@Html.ValidationMessageFor(m => m.Product.BestSellers, "",

new { @class = "text-danger" })

						</div>
					</div>


				</div>
			</div>
		</div>


		<div class="tab-pane fade" id="product-edit-description">
			<div class="card">
				<div class="card-body">
					<div id="productDescription">
						@Html.TextAreaFor(model => model.Product.Description, new { @class = "form-control content-editor" })
					</div>
				</div>
			</div>
		</div>

		<div class="tab-pane fade" id="product-edit-option">
			<div class="card">
				<div class="card-body row">

					@foreach (var size in Model.Product.Sizes)
					{
						<div class="file">
							<div class="media align-items-center">
								<div class="m-r-15 font-size-30">
									<i class="anticon anticon-info-circle text-success"></i>
								</div>
								<div>
									<h6 class="mb-0">Size Name: <span class="font-size-13 text-muted">@size.SizeName</span></h6>
									<h6 class="mb-0">Total Stock: <span class="font-size-13 text-muted">@size.Stock</span></h6>
								</div>
							</div>
						</div>


					}



				</div>
			</div>
		</div>
		<div class="tab-pane fade" id="product-image-basic">
			<div class="card">
				<div class="card-body">

					@foreach (var photo in Model.Product.ImageProducts)
					{
						<img src="@Url.Content(photo.FileName)" width="120" />
					}

				</div>
			</div>
		</div>

	</div>
	<div class="m-b-15">
		<button class="btn btn-primary">
			<i class="anticon anticon-save"></i>
			<span>Save</span>
		</button>
	</div>
}
<p>
	@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
	@Html.ActionLink("Back to List", "Index")
</p>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/jquery.validate.min.js"></script>
	<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
	<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
	<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote.css" integrity="sha512-vff/nplkvWotqQwl1EM/zjrIqsbIeUKRUgLk+qeiZZkjAimu/BGmDg4OjZBG6r+GV0HcJwrZPjRVi0wPvUJuhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
	<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote.js" integrity="sha512-iiWBczJtlBRDbGK5MLRgLii3o9B5qTOp7FKUl7NLCzejJL7upsHPAg2li8LIV49y5pTLNMfnxYIRajAB+Ph4rw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

	<script type="text/javascript">
			$(document).ready(function () {
				var max_fields = 10; //maximum input boxes allowed
				var wrapper = $(".myinput"); //Fields wrapper
				var add_button = $(".btnAddNew"); //Add button ID
				var x = 0; //initlal text box count
				$(add_button).click(function (e) { //on add input button click
					e.preventDefault();
					if (x < max_fields) { //max input box allowed
						x++; //text box increment
						$(wrapper).append('<div>  <div class="form-group "> @Html.LabelFor(model => model.Size.SizeName, htmlAttributes: new { @class = "control-label col-md-2" })<div class="col-md-6">@Html.EditorFor(model => model.Size.SizeName, new { @class = "form-control" })@Html.ValidationMessageFor(model => model.Size.SizeName, "", new { @class = "text-danger" })</div></div><div class="form-group ">@Html.LabelFor(model => model.Size.Stock, htmlAttributes: new { @class = "control-label col-md-2" })<div class="col-md-6">@Html.EditorFor(model => model.Size.Stock, new { @class = "form-control" })@Html.ValidationMessageFor(model => model.Size.Stock, "", new { @class = "text-danger" })</div></div><a href="#" class="btnRemove">Xóa</a></div>'); //add input box
					}
				});
				$(wrapper).on("click", ".btnRemove", function (e) { //user click on remove text
					e.preventDefault(); $(this).parent('div').remove(); x--;
				})
			});
			$(document).ready(function () {
				$(".content-editor").summernote({
					height: 300,
					minHeight: null,
					maxHeight: null,
					codemirror: {
						theme: "monokai"
					},
					callbacks: {
						onImageUpload: function (files) {
							for (var i = 0; i < files.length; i++) {
								uploadImage(files[i]);
							}
						}
					},
					fontSizes: ['12', '14', '16', '18', '24', '36', '48'],
					toolbar: [
						['style', ['style']],
						['font', ['bold', 'underline', 'clear']],
						['fontname', ['fontname']],
						['fontsize', ['fontsize']],
						['color', ['color']],
						['para', ['ul', 'ol', 'paragraph']],
						['table', ['table']],
						['insert', ['link', 'picture', 'video']],
						['view', ['fullscreen', 'codeview', 'help']],
					],
				});
			});
			function uploadImage(file) {
				var formData = new FormData();
				formData.append("uploadedFiles", file);
				$.ajax({
					data: formData,
					type: "POST",
					url: '/BlogPosts/UploadFile',
					cache: false,
					contentType: false,
					processData: false,
					success: function (FileUrl) {
						alert(FileUrl);
						var imgNode = document.createElement('img');
						imgNode.src = FileUrl;
						$('.content-editor').summernote('insertNode', imgNode);
					},
					error: function (data) {
						alert(data.responseText);
					}
				});
			}
			//view image thumb////////////////////////////////////////////////////////////////////////
			$(document).ready(function () {
				$("#imageBrowes").change(function () {
					var File = this.files;
					if (File && File[0]) {
						ReadImage(File[0]);
					}
				})
			})
			var ReadImage = function (file) {
				var reader = new FileReader;
				var image = new Image;
				reader.readAsDataURL(file);
				reader.onload = function (_file) {
					image.src = _file.target.result;
					image.onload = function () {
						var height = this.height;
						var width = this.width;
						var type = file.type;
						var size = ~~(file.size / 1024) + "KB";
						$("#targetImg").attr('src', _file.target.result);
						$("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
						$("#imgPreview").show();
					}
				}
			}
			var ClearPreview = function () {
				$("#imageBrowes").val('');
				$("#description").text('');
				$("#imgPreview").hide();
			}
			$(function () {
				function togglePackage() {
					var isPackage = $("#package-checkbox").is(":checked");
					if (isPackage) {
						$("#datapoint-checkbox").prop("checked", true).prop("disabled", true);
						$("input[type='hidden'][name='isPublic']").val("true");
					}
					else {
						$("#datapoint-checkbox").prop("disabled", false);
						$("input[type='hidden'][name='isHotNews']").val("false");
					}
				};
				$(document).on('change', '#package-checkbox', togglePackage);
				togglePackage();
			});
			//upload muiltple
			//$(document).ready(function () {
			//	var max_fields = 10; //maximum input boxes allowed
			//	var wrapper = $(".myinput"); //Fields wrapper
			//	var add_button = $(".btnAddNew"); //Add button ID

			//	var x = 0; //initlal text box count
			//	$(add_button).click(function (e) { //on add input button click
			//		e.preventDefault();
			//		if (x < max_fields) { //max input box allowed
			//			x++; //text box increment
			//			$(wrapper).append('<div>   <input type="file" name="uploadFile[' + x + ']" /><a href="#" class="btnRemove">Xóa</a></div>'); //add input box
			//		}
			//	});

			//	$(wrapper).on("click", ".btnRemove", function (e) { //user click on remove text
			//		e.preventDefault(); $(this).parent('div').remove(); x--;
			//	})
			//});
			$(".imgAdd").click(function () {
				$(this).closest(".row").find('.imgAdd').before('<div class="col-sm-2 imgUp"><div class="imagePreview"></div><label class="btn btn-primary">Upload<input name="file" type="file" class="uploadFile img" value="Upload Photo" style="width:0px;height:0px;overflow:hidden;"></label><i class="fa fa-times del"></i></div>');
			});
			$(document).on("click", "i.del", function () {
				// 	to remove card
				$(this).parent().remove();
				// to clear image
				// $(this).parent().find('.imagePreview').css("background-image","url('')");
			});
			$(function () {
				$(document).on("change", ".uploadFile", function () {
					var uploadFile = $(this);
					var files = !!this.files ? this.files : [];
					if (!files.length || !window.FileReader) return; // no file selected, or no FileReader support

					if (/^image/.test(files[0].type)) { // only image file
						var reader = new FileReader(); // instance of the FileReader
						reader.readAsDataURL(files[0]); // read the local file

						reader.onloadend = function () { // set image data as background of div
							//alert(uploadFile.closest(".upimage").find('.imagePreview').length);
							uploadFile.closest(".imgUp").find('.imagePreview').css("background-image", "url(" + this.result + ")");
						}
					}

				});
			});
	</script>
}
