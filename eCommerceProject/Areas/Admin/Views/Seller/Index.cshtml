@model IPagedList<eCommerceProject.Models.Seller>
	@using eCommerceProject.Enums;

	@using PagedList;
	@using PagedList.Mvc;
	@{
		ViewBag.Title = "Index";
		Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
	}
<style>
	.active {
		color: #02a499;
	}

	.unactive {
		color: #ec4561;
	}

	.disabled {
		color: #f8b425;
	}


	.ul.pagination {
		display: inline-block;
		padding: 0;

		margin: 0;
	}

	ul.pagination li {
		display: inline;
		/*border: 1px solid #02a499;*/
		border-radius: 50% !important;
		margin: 0 5px;
	}

		ul.pagination li a {
			color: black;
			float: left;
			padding: 8px 16px;
			text-decoration: none;
			border-radius: 50% !important;
			transition: background-color .3s;
		}
		ul.pagination li.active {
			background-color: #02a499;
			color: white;
			border-radius: 50% !important;
			margin: 0 5px;
		}
		ul.pagination li a.active {
			background-color: #02a499;
			color: white;
			border-radius: 50% !important;
			margin: 0 5px;
		}

		ul.pagination li a:hover:not(.active) {
			background-color: #02a499;
			border-radius: 50% !important;
			color: white;
		}

	</style>


	<div class="page-header">
		<h2 class="header-title">Sellers List</h2>
		<div class="header-sub-title">
			<nav class="breadcrumb breadcrumb-dash">
				<a href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Home</a>
				<a class="breadcrumb-item" href="#">Users</a>
				<span class="breadcrumb-item active">Sellers List</span>
			</nav>
		</div>
	</div>
	<div class="card">
		<div class="card-body">
			<div class="row m-b-30">
				<div class="col-lg-8 ">

					<form>
						@using (Html.BeginForm("Index", "Seller", "POST"))
						{
							<div class="d-md-flex ">
								<div class="m-b-10 col-md-3 form-row ">



									@Html.DropDownList("filter", new List<SelectListItem>{ new SelectListItem {Text = "Actived", Value = "1" + ""},
															 new SelectListItem {Text = "Unactived", Value = "2"},
															 new SelectListItem {Text = "Disabled", Value = "3"},
														 }, "--Select Status--", new { @class = "form-control col-md-12 " })


								</div>
								<div class="input-affix m-b-10 ">

									<i class="prefix-icon anticon anticon-search"></i>
									@Html.TextBox("search", null, new { @type = "text", @class = "form-control col-md-10", @placeholder = "Search..." })


								</div>
								<input style="height: 45px" value="Filter" type="submit" class="btn btn-info btn-tone m-r-5" />

							</div>
						}
					</form>
				</div>
				<div class="col-lg-4 text-right">
					@using (Html.BeginForm("Export", "Seller", new { @class = "form-control" }, FormMethod.Post))
					{
						<button class="btn btn-primary btn-tone m-r-5">
							<i class="anticon anticon-plus"></i>
							@Html.ActionLink("Create New", "CreateAccount", "AdminAccount")
						</button>

						<button class="btn btn-primary">

							<i class="anticon anticon-file-excel "></i>
							<span type="submit">
								Export
							</span>

						</button>

					}


				</div>

			</div>
			<div class="table-responsive">
				<table class="table table-hover e-commerce-table">
					<thead>
						<tr>

							<th>Full Name</th>
							<th>Email</th>
							<th>Phone Number</th>
							<th>Address</th>
							<th>Status</th>
							<th>#</th>
						</tr>
					</thead>
					<tbody>
						@if (Model != null && Model.Count > 0)
						{
							foreach (var item in Model)
							{

								<tr>
									<td>
										@Html.DisplayFor(modelItem => item.FullName)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.Email)
									</td>


									<td>
										@Html.DisplayFor(modelItem => item.PhoneNumber)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.Address)
									</td>
									<td>
										@if (item.StatusID == 1)
										{
											<a><span class="active">●</span> Actived</a>

										}
										@if (item.StatusID == 2)
										{
											<a><span class="unactive">●</span> Unactive</a>

										}
										@if (item.StatusID == 3)
										{
											<a><span class="disabled">●</span> Disabled</a>

										}
									</td>

									<td>
										@Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-success btn-tone m-r-5" })
										@Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-tone m-r-5" })
										@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-tone m-r-5" })
									</td>
								</tr>
							}
						}
						else
						{
							<a style="color:red">No User In Here!</a>
						}

					</tbody>
				</table>
				<div class="container">
					<div class="row">
						<div class=" col">
							Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
						</div>
						
							
								@Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, search = Request.QueryString["search"], filter = Request.QueryString["filter"] }), new PagedListRenderOptions { LinkToFirstPageFormat = "<< First", LinkToPreviousPageFormat = "<", LinkToNextPageFormat = ">", LinkToLastPageFormat = "Last >>" })
							
						
					</div>
				</div>
				

			</div>
		</div>
	</div>
